#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å Gradle –∏ –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π –≤ –ø—É—Ç–∏
"""

import os
import sys
import subprocess
import time
import shutil
from pathlib import Path

def print_step(step, description):
    print(f"\n{'='*60}")
    print(f"–®–ê–ì {step}: {description}")
    print(f"{'='*60}")

def print_info(message):
    print(f"[INFO] {message}")

def print_error(message):
    print(f"[ERROR] {message}")

def print_success(message):
    print(f"[SUCCESS] {message}")

def create_gradle_home():
    """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –ø–∞–ø–∫—É –¥–ª—è Gradle –±–µ–∑ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã"""
    print_step(1, "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ø–∞–ø–∫–∏ –¥–ª—è Gradle")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –≤ –∫–æ—Ä–Ω–µ –¥–∏—Å–∫–∞ C –±–µ–∑ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
        gradle_home = Path('C:/gradle_home_clean')
        
        if gradle_home.exists():
            print_info("–ü–∞–ø–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ—á–∏—â–∞–µ–º...")
            shutil.rmtree(gradle_home, ignore_errors=True)
        
        gradle_home.mkdir(parents=True, exist_ok=True)
        print_success(f"–°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: {gradle_home}")
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∞–ø–∫–∏
        (gradle_home / 'wrapper' / 'dists').mkdir(parents=True, exist_ok=True)
        (gradle_home / 'caches').mkdir(parents=True, exist_ok=True)
        print_success("–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫ —Å–æ–∑–¥–∞–Ω–∞")
        
        return gradle_home
    except Exception as e:
        print_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–∞–ø–∫–∏: {e}")
        return None

def copy_gradle_wrapper():
    """–ö–æ–ø–∏—Ä—É–µ—Ç Gradle wrapper –∏–∑ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"""
    print_step(2, "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ Gradle wrapper")
    
    try:
        source_wrapper = Path('../AndroidVoiceOn/gradle/wrapper')
        target_wrapper = Path('./gradle/wrapper')
        
        if source_wrapper.exists():
            shutil.copytree(source_wrapper, target_wrapper, dirs_exist_ok=True)
            print_success("Gradle wrapper —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω")
        else:
            print_error("–ò—Å—Ö–æ–¥–Ω—ã–π Gradle wrapper –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        return True
    except Exception as e:
        print_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ wrapper: {e}")
        return False

def copy_gradle_distributions():
    """–ö–æ–ø–∏—Ä—É–µ—Ç —É–∂–µ —Å–∫–∞—á–∞–Ω–Ω—ã–µ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤—ã Gradle"""
    print_step(3, "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–æ–≤ Gradle")
    
    try:
        source_dists = Path('C:/Users/mikedell/.gradle/wrapper/dists')
        target_dists = Path('C:/gradle_home_clean/wrapper/dists')
        
        if source_dists.exists():
            print_info("–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–æ–≤...")
            shutil.copytree(source_dists, target_dists, dirs_exist_ok=True)
            print_success("–î–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã")
        else:
            print_info("–î–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –±—É–¥—É—Ç —Å–∫–∞—á–∞–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
        
        return True
    except Exception as e:
        print_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–æ–≤: {e}")
        return False

def update_gradle_properties():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç gradle.properties —Å –Ω–æ–≤—ã–º –ø—É—Ç–µ–º"""
    print_step(4, "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ gradle.properties")
    
    try:
        properties_content = """# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
org.gradle.parallel=true
org.gradle.caching=true
org.gradle.configureondemand=true
# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app's APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true
# Kotlin code style for this project: "official" or "obsolete":
kotlin.code.style=official
# Enables namespacing of each library's R class so that its R class includes only the
# resources declared in the library itself and none from the library's dependencies,
# thereby reducing the size of the R class for that library
android.nonTransitiveRClass=true
# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –ø—É—Ç—å –¥–ª—è Gradle home
org.gradle.user.home=C:/gradle_home_clean
"""
        
        with open('gradle.properties', 'w', encoding='utf-8') as f:
            f.write(properties_content)
        
        print_success("gradle.properties –æ–±–Ω–æ–≤–ª–µ–Ω")
        return True
        
    except Exception as e:
        print_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ gradle.properties: {e}")
        return False

def create_android_studio_settings():
    """–°–æ–∑–¥–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Android Studio"""
    print_step(5, "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è Android Studio")
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –¥–ª—è Android Studio
        instructions = """# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Gradle –¥–ª—è Android Studio

## –ü—Ä–æ–±–ª–µ–º–∞
Gradle –Ω–µ –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª—ã –≤ –ø—É—Ç–∏ —Å –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π: C:\\Users\\mikedell\\.gradle

## –†–µ—à–µ–Ω–∏–µ
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–æ–≤—ã–π –ø—É—Ç—å –±–µ–∑ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã: C:\\gradle_home_clean

## –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤ Android Studio:

### –°–ø–æ—Å–æ–± 1: –ß–µ—Ä–µ–∑ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
1. –û—Ç–∫—Ä–æ–π—Ç–µ Android Studio
2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ File -> Settings (–∏–ª–∏ Ctrl+Alt+S)
3. –í –ª–µ–≤–æ–º –º–µ–Ω—é –≤—ã–±–µ—Ä–∏—Ç–µ Build, Execution, Deployment -> Gradle
4. –í –ø–æ–ª–µ "Gradle user home" –≤–≤–µ–¥–∏—Ç–µ: C:\\gradle_home_clean
5. –ù–∞–∂–º–∏—Ç–µ Apply –∏ OK
6. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Android Studio

### –°–ø–æ—Å–æ–± 2: –ß–µ—Ä–µ–∑ gradle.properties
–§–∞–π–ª gradle.properties —É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø—É—Ç–µ–º.

### –°–ø–æ—Å–æ–± 3: –ß–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è GRADLE_USER_HOME=C:\\gradle_home_clean

## –ü—Ä–æ–≤–µ—Ä–∫–∞
–ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç:
1. File -> Sync Project with Gradle Files
2. –ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "Sync Now" –≤ –≤–µ—Ä—Ö–Ω–µ–π –ø–∞–Ω–µ–ª–∏

## –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –æ—Å—Ç–∞–µ—Ç—Å—è
1. File -> Invalidate Caches and Restart
2. –í—ã–±–µ—Ä–∏—Ç–µ "Invalidate and Restart"
"""
        
        with open('GRADLE_SETTINGS_INSTRUCTIONS.md', 'w', encoding='utf-8') as f:
            f.write(instructions)
        
        print_success("–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏: GRADLE_SETTINGS_INSTRUCTIONS.md")
        return True
        
    except Exception as e:
        print_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: {e}")
        return False

def test_gradle_setup():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É Gradle"""
    print_step(6, "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Gradle")
    
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
        env = os.environ.copy()
        env['GRADLE_USER_HOME'] = 'C:\\gradle_home_clean'
        
        print_info("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ gradlew --version...")
        result = subprocess.run(
            ['gradlew.bat', '--version'],
            capture_output=True,
            text=True,
            timeout=60,
            env=env
        )
        
        if result.returncode == 0:
            print_success("Gradle —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            print_info("–í–µ—Ä—Å–∏—è Gradle:")
            for line in result.stdout.split('\n')[:5]:
                if line.strip():
                    print_info(line.strip())
            return True
        else:
            print_error("Gradle –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            if result.stderr:
                print_error("–û—à–∏–±–∫–∞:")
                print(result.stderr)
            return False
            
    except Exception as e:
        print_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

def create_build_script():
    """–°–æ–∑–¥–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"""
    print_step(7, "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —Å–±–æ—Ä–∫–∏")
    
    try:
        build_script = '''#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –ø—É—Ç–µ–º Gradle
"""

import os
import sys
import subprocess
import time
from pathlib import Path

def print_info(message):
    print(f"[INFO] {message}")

def print_error(message):
    print(f"[ERROR] {message}")

def print_success(message):
    print(f"[SUCCESS] {message}")

def build_project():
    """–°–æ–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–µ–∫—Ç —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –ø—É—Ç–µ–º Gradle"""
    print("üöÄ –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –ø—É—Ç–µ–º Gradle")
    
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
        env = os.environ.copy()
        env['GRADLE_USER_HOME'] = 'C:\\\\gradle_home_clean'
        print_info(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω GRADLE_USER_HOME: {env['GRADLE_USER_HOME']}")
        
        print_info("–ó–∞–ø—É—Å–∫ gradlew assembleDebug...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É —Å –≤—ã–≤–æ–¥–æ–º –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        process = subprocess.Popen(
            ['gradlew.bat', 'assembleDebug'],
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
            text=True,
            bufsize=1,
            universal_newlines=True,
            env=env
        )
        
        # –í—ã–≤–æ–¥–∏–º –≤—ã–≤–æ–¥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        for line in process.stdout:
            print(line.rstrip())
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
        return_code = process.wait()
        
        if return_code == 0:
            print_success("APK —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω!")
            return True
        else:
            print_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ. –ö–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞: {return_code}")
            return False
            
    except Exception as e:
        print_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ: {e}")
        return False

def find_apk():
    """–ò—â–µ—Ç —Å–æ–±—Ä–∞–Ω–Ω—ã–π APK —Ñ–∞–π–ª"""
    apk_path = Path('app/build/outputs/apk/debug/app-debug.apk')
    
    if apk_path.exists():
        size_mb = apk_path.stat().st_size / (1024 * 1024)
        print_success(f"APK –Ω–∞–π–¥–µ–Ω: {apk_path}")
        print_info(f"–†–∞–∑–º–µ—Ä: {size_mb:.2f} –ú–ë")
        return True
    else:
        print_error("APK —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

if __name__ == "__main__":
    if build_project():
        find_apk()
    else:
        sys.exit(1)
'''
        
        with open('build_fixed.py', 'w', encoding='utf-8') as f:
            f.write(build_script)
        
        print_success("–°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏: build_fixed.py")
        return True
        
    except Exception as e:
        print_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞: {e}")
        return False

def main():
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å Gradle –∏ –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π")
    print(f"–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: {time.strftime('%Y-%m-%d %H:%M:%S')}")
    
    gradle_home = create_gradle_home()
    if not gradle_home:
        return False
    
    if not copy_gradle_wrapper():
        return False
    
    if not copy_gradle_distributions():
        return False
    
    if not update_gradle_properties():
        return False
    
    if not create_android_studio_settings():
        return False
    
    if not test_gradle_setup():
        print_info("Gradle –Ω–µ –ø—Ä–æ—à–µ–ª —Ç–µ—Å—Ç, –Ω–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–∑–¥–∞–Ω—ã")
    
    if not create_build_script():
        return False
    
    print("\n" + "="*60)
    print_success("üéâ –ü—Ä–æ–±–ª–µ–º–∞ —Å Gradle –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
    print("="*60)
    print_info("–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print_info("1. –û—Ç–∫—Ä–æ–π—Ç–µ Android Studio")
    print_info("2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ File -> Settings -> Build, Execution, Deployment -> Gradle")
    print_info("3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ 'Gradle user home': C:\\gradle_home_clean")
    print_info("4. –ù–∞–∂–º–∏—Ç–µ Apply –∏ OK")
    print_info("5. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Android Studio")
    print_info("6. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–π—Ç–µ –ø—Ä–æ–µ–∫—Ç")
    print_info("")
    print_info("–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫—Ä–∏–ø—Ç: py build_fixed.py")
    
    return True

if __name__ == "__main__":
    try:
        success = main()
        sys.exit(0 if success else 1)
    except KeyboardInterrupt:
        print("\n\n[INFO] –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print_error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1) 