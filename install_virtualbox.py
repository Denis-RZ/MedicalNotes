#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–£—Å—Ç–∞–Ω–æ–≤–∫–∞ VirtualBox –¥–ª—è Genymotion
"""

import os
import sys
import subprocess
import time
import urllib.request
from pathlib import Path

def find_virtualbox():
    """–ü–æ–∏—Å–∫ VirtualBox"""
    possible_paths = [
        "C:/Program Files/Oracle/VirtualBox/VBoxManage.exe",
        "C:/Program Files (x86)/Oracle/VirtualBox/VBoxManage.exe",
        "VBoxManage.exe"
    ]
    
    for path in possible_paths:
        if os.path.exists(path):
            print(f"‚úÖ VirtualBox –Ω–∞–π–¥–µ–Ω: {path}")
            return True
            
    print("‚ùå VirtualBox –Ω–µ –Ω–∞–π–¥–µ–Ω")
    return False

def download_virtualbox():
    """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ VirtualBox"""
    try:
        print("üì• –°–∫–∞—á–∏–≤–∞–µ–º VirtualBox...")
        
        # –°–∫–∞—á–∏–≤–∞–µ–º VirtualBox –¥–ª—è Windows
        url = "https://download.virtualbox.org/virtualbox/7.0.18/VirtualBox-7.0.18-162988-Win.exe"
        filename = "VirtualBox-Installer.exe"
        
        print(f"–°–∫–∞—á–∏–≤–∞–µ–º {filename}...")
        urllib.request.urlretrieve(url, filename)
        
        print(f"‚úÖ {filename} —Å–∫–∞—á–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        return filename
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {e}")
        return None

def install_virtualbox(installer_path):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ VirtualBox"""
    try:
        print("üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º VirtualBox...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫
        result = subprocess.run([
            installer_path, "--silent", "--ignore-reboot"
        ], capture_output=True, text=True, encoding='utf-8')
        
        if result.returncode == 0:
            print("‚úÖ VirtualBox —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {result.stderr}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
        return False

def enable_virtualization():
    """–í–∫–ª—é—á–µ–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏ –≤ BIOS"""
    print("üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—é...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏
        result = subprocess.run([
            "wmic", "cpu", "get", "VirtualizationFirmwareEnabled"
        ], capture_output=True, text=True, encoding='utf-8')
        
        if "TRUE" in result.stdout:
            print("‚úÖ –í–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞ –≤ BIOS")
            return True
        else:
            print("‚ùå –í–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ BIOS")
            print("üí° –í–∫–ª—é—á–∏—Ç–µ –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—é –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö BIOS:")
            print("   1. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –∫–æ–º–ø—å—é—Ç–µ—Ä")
            print("   2. –í–æ–π–¥–∏—Ç–µ –≤ BIOS (F2, F10, Del)")
            print("   3. –ù–∞–π–¥–∏—Ç–µ 'Virtualization Technology' –∏–ª–∏ 'Intel VT-x'")
            print("   4. –í–∫–ª—é—á–∏—Ç–µ —ç—Ç—É –æ–ø—Ü–∏—é")
            print("   5. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ—Å—å")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return False

def configure_genymotion():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Genymotion"""
    try:
        print("üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Genymotion...")
        
        # –ù–∞—Ö–æ–¥–∏–º –ø—É—Ç—å –∫ Genymotion
        genymotion_paths = [
            "C:/Program Files/Genymobile/Genymotion/genymotion.exe",
            "C:/Program Files (x86)/Genymobile/Genymotion/genymotion.exe"
        ]
        
        genymotion_path = None
        for path in genymotion_paths:
            if os.path.exists(path):
                genymotion_path = path
                break
        
        if not genymotion_path:
            print("‚ùå Genymotion –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Genymotion –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è VirtualBox
        print("üìù –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≥–∏–ø–µ—Ä–≤–∏–∑–æ—Ä...")
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª
        config_content = """[Genymotion]
hypervisor=VBox
"""
        
        config_path = Path.home() / ".Genymobile" / "Genymotion" / "genymotion.conf"
        config_path.parent.mkdir(parents=True, exist_ok=True)
        
        with open(config_path, "w") as f:
            f.write(config_content)
        
        print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: {config_path}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Genymotion: {e}")
        return False

def create_launcher():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞—Ç–æ—Ä–∞"""
    try:
        print("üìã –°–æ–∑–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞—Ç–æ—Ä...")
        
        launcher_content = """@echo off
echo –£—Å—Ç–∞–Ω–æ–≤–∫–∞ VirtualBox –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Genymotion...
python install_virtualbox.py
pause
"""
        
        launcher_path = Path("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å_VirtualBox.bat")
        with open(launcher_path, "w", encoding="utf-8") as f:
            f.write(launcher_content)
        
        print(f"‚úÖ –ó–∞–ø—É—Å–∫–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω: {launcher_path}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø—É—Å–∫–∞—Ç–æ—Ä–∞: {e}")
        return False

def main():
    print("üîß VirtualBox Installer –¥–ª—è Genymotion")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ —É–∂–µ VirtualBox
    if find_virtualbox():
        print("‚úÖ VirtualBox —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        configure_genymotion()
        return True
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—é
    if not enable_virtualization():
        print("\n‚ö†Ô∏è  –°–Ω–∞—á–∞–ª–∞ –≤–∫–ª—é—á–∏—Ç–µ –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—é –≤ BIOS")
        return False
    
    # –°–∫–∞—á–∏–≤–∞–µ–º VirtualBox
    installer_path = download_virtualbox()
    if not installer_path:
        return False
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º VirtualBox
    if not install_virtualbox(installer_path):
        return False
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Genymotion
    configure_genymotion()
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞—Ç–æ—Ä
    create_launcher()
    
    print("\nüéâ VirtualBox —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
    print("üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å Genymotion:")
    print("   python light_emulator.py")
    
    # –£–¥–∞–ª—è–µ–º —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫
    try:
        os.remove(installer_path)
        print(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ —É–¥–∞–ª–µ–Ω: {installer_path}")
    except:
        pass
    
    return True

if __name__ == "__main__":
    main() 