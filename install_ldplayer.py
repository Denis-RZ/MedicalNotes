#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–£—Å—Ç–∞–Ω–æ–≤–∫–∞ LDPlayer - –±—ã—Å—Ç—Ä–æ–≥–æ —ç–º—É–ª—è—Ç–æ—Ä–∞
"""

import os
import sys
import subprocess
import time
import urllib.request
from pathlib import Path

def download_ldplayer():
    """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ LDPlayer"""
    try:
        print("üì• –°–∫–∞—á–∏–≤–∞–µ–º LDPlayer...")
        
        # –°–∫–∞—á–∏–≤–∞–µ–º LDPlayer
        url = "https://en.ldplayer.net/dl/en/LDPlayer9.exe"
        filename = "LDPlayer-Installer.exe"
        
        print(f"–°–∫–∞—á–∏–≤–∞–µ–º {filename}...")
        urllib.request.urlretrieve(url, filename)
        
        print(f"‚úÖ {filename} —Å–∫–∞—á–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        return filename
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {e}")
        return None

def install_ldplayer(installer_path):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ LDPlayer"""
    try:
        print("üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º LDPlayer...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫
        result = subprocess.run([
            installer_path, "/S"  # –¢–∏—Ö–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
        ], capture_output=True, text=True, encoding='utf-8')
        
        if result.returncode == 0:
            print("‚úÖ LDPlayer —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {result.stderr}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
        return False

def find_ldplayer():
    """–ü–æ–∏—Å–∫ LDPlayer"""
    ldplayer_paths = [
        "C:/Program Files/LDPlayer/LDPlayer9/ldconsole.exe",
        "C:/Program Files (x86)/LDPlayer/LDPlayer9/ldconsole.exe",
        "C:/Program Files/LDPlayer/LDPlayer4.0/ldconsole.exe",
        "C:/Program Files (x86)/LDPlayer/LDPlayer4.0/ldconsole.exe"
    ]
    
    for path in ldplayer_paths:
        if os.path.exists(path):
            print(f"‚úÖ LDPlayer –Ω–∞–π–¥–µ–Ω: {path}")
            return path
    
    print("‚ùå LDPlayer –Ω–µ –Ω–∞–π–¥–µ–Ω")
    return None

def create_ldplayer_launcher():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞—Ç–æ—Ä–∞ –¥–ª—è LDPlayer"""
    try:
        print("üìã –°–æ–∑–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞—Ç–æ—Ä...")
        
        launcher_content = """@echo off
echo –ó–∞–ø—É—Å–∫ MedicalNotes –Ω–∞ LDPlayer...
python ldplayer_launcher.py
pause
"""
        
        launcher_path = Path("–ó–∞–ø—É—Å—Ç–∏—Ç—å_LDPlayer.bat")
        with open(launcher_path, "w", encoding="utf-8") as f:
            f.write(launcher_content)
        
        print(f"‚úÖ –ó–∞–ø—É—Å–∫–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω: {launcher_path}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø—É—Å–∫–∞—Ç–æ—Ä–∞: {e}")
        return False

def create_ldplayer_script():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ LDPlayer"""
    try:
        print("üìã –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞...")
        
        script_content = '''#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ó–∞–ø—É—Å–∫ MedicalNotes –Ω–∞ LDPlayer
"""

import os
import sys
import subprocess
import time
from pathlib import Path

def find_adb():
    """–ü–æ–∏—Å–∫ ADB"""
    possible_paths = [
        os.path.expanduser("~/AppData/Local/Android/Sdk/platform-tools/adb.exe"),
        "C:/Users/%USERNAME%/AppData/Local/Android/Sdk/platform-tools/adb.exe",
        "C:/Android/Sdk/platform-tools/adb.exe",
        "adb.exe"
    ]
    
    for path in possible_paths:
        path = os.path.expandvars(path)
        if os.path.exists(path):
            return path
    return None

def find_ldplayer():
    """–ü–æ–∏—Å–∫ LDPlayer"""
    ldplayer_paths = [
        "C:/Program Files/LDPlayer/LDPlayer9/ldconsole.exe",
        "C:/Program Files (x86)/LDPlayer/LDPlayer9/ldconsole.exe"
    ]
    
    for path in ldplayer_paths:
        if os.path.exists(path):
            return path
    return None

def start_ldplayer(ldplayer_path):
    """–ó–∞–ø—É—Å–∫ LDPlayer"""
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º LDPlayer...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º LDPlayer
        result = subprocess.run([
            ldplayer_path, "launch", "--index", "0"
        ], capture_output=True, text=True, encoding='utf-8')
        
        if result.returncode == 0:
            print("‚úÖ LDPlayer –∑–∞–ø—É—â–µ–Ω")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {result.stderr}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        return False

def wait_for_device(adb_path, timeout=180):
    """–û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞"""
    print("‚è≥ –û–∂–∏–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞...")
    
    for i in range(timeout):
        try:
            result = subprocess.run([adb_path, "devices"], 
                                  capture_output=True, text=True, encoding='utf-8')
            
            lines = result.stdout.strip().split('\\n')[1:]
            devices = []
            
            for line in lines:
                if line.strip() and '\\t' in line:
                    device_id, status = line.split('\\t')
                    if status == 'device':
                        devices.append(device_id)
            
            if devices:
                print(f"‚úÖ –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ: {devices[0]}")
                return devices[0]
            
            print(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ... ({i+1}/{timeout})")
            time.sleep(2)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
            time.sleep(2)
    
    print("‚ùå –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–µ –ø–æ–¥–∫–ª—é—á–∏–ª–æ—Å—å")
    return None

def install_and_run_app(adb_path, device_id):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    try:
        # –ò—â–µ–º APK
        apk_paths = [
            Path("MedicalNotes-v2.2-fixed.apk"),
            Path("MedicalNotes-v2.1-update.apk"),
            Path("MedicalNotes-with-alarm-sound.apk")
        ]
        
        apk_path = None
        for path in apk_paths:
            if path.exists():
                apk_path = path
                break
        
        if not apk_path:
            print("‚ùå APK –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        print(f"üì± –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º APK
        result = subprocess.run([
            adb_path, "-s", device_id, "install", "-r", str(apk_path)
        ], capture_output=True, text=True, encoding='utf-8')
        
        if "Success" in result.stdout:
            print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...")
            result = subprocess.run([
                adb_path, "-s", device_id, "shell", 
                "am", "start", "-n", "com.medicalnotes.app/.MainActivity"
            ], capture_output=True, text=True, encoding='utf-8')
            
            if result.returncode == 0:
                print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {result.stderr}")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {result.stderr}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    print("üöÄ LDPlayer Launcher")
    print("=" * 25)
    
    # –ò—â–µ–º ADB
    adb_path = find_adb()
    if not adb_path:
        print("‚ùå ADB –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    print(f"‚úÖ ADB –Ω–∞–π–¥–µ–Ω: {adb_path}")
    
    # –ò—â–µ–º LDPlayer
    ldplayer_path = find_ldplayer()
    if not ldplayer_path:
        print("‚ùå LDPlayer –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    print(f"‚úÖ LDPlayer –Ω–∞–π–¥–µ–Ω: {ldplayer_path}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º LDPlayer
    if not start_ldplayer(ldplayer_path):
        return False
    
    # –ñ–¥–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    device_id = wait_for_device(adb_path)
    if not device_id:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ")
        return False
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    if install_and_run_app(adb_path, device_id):
        print("\\nüéâ MedicalNotes –∑–∞–ø—É—â–µ–Ω –Ω–∞ LDPlayer!")
        return True
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
        return False

if __name__ == "__main__":
    main()
'''
        
        script_path = Path("ldplayer_launcher.py")
        with open(script_path, "w", encoding="utf-8") as f:
            f.write(script_content)
        
        print(f"‚úÖ –°–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω: {script_path}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞: {e}")
        return False

def main():
    print("üîß LDPlayer Installer")
    print("=" * 30)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ —É–∂–µ LDPlayer
    if find_ldplayer():
        print("‚úÖ LDPlayer —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        create_ldplayer_launcher()
        create_ldplayer_script()
        
        print("\nüéâ LDPlayer –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        print("üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
        print("   python ldplayer_launcher.py")
        print("   –∏–ª–∏")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç—å_LDPlayer.bat")
        
        return True
    
    # –°–∫–∞—á–∏–≤–∞–µ–º LDPlayer
    installer_path = download_ldplayer()
    if not installer_path:
        return False
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º LDPlayer
    if not install_ldplayer(installer_path):
        return False
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞—Ç–æ—Ä—ã
    create_ldplayer_launcher()
    create_ldplayer_script()
    
    print("\nüéâ LDPlayer —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    print("üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("   python ldplayer_launcher.py")
    print("   –∏–ª–∏")
    print("   –ó–∞–ø—É—Å—Ç–∏—Ç—å_LDPlayer.bat")
    
    # –£–¥–∞–ª—è–µ–º —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫
    try:
        os.remove(installer_path)
        print(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ —É–¥–∞–ª–µ–Ω: {installer_path}")
    except:
        pass
    
    return True

if __name__ == "__main__":
    main() 