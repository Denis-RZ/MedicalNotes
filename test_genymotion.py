#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Genymotion –±–µ–∑ VirtualBox
"""

import os
import sys
import subprocess
import time
from pathlib import Path

def test_genymotion():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Genymotion"""
    try:
        print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º Genymotion...")
        
        genymotion_path = "C:/Program Files/Genymobile/Genymotion/genymotion.exe"
        
        if not os.path.exists(genymotion_path):
            print("‚ùå Genymotion –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Genymotion...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º Genymotion
        process = subprocess.Popen([genymotion_path], 
                                 stdout=subprocess.PIPE, 
                                 stderr=subprocess.PIPE,
                                 text=True)
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
        time.sleep(5)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å
        if process.poll() is None:
            print("‚úÖ Genymotion –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            print("üí° –ï—Å–ª–∏ –ø–æ—è–≤–∏—Ç—Å—è –æ—à–∏–±–∫–∞ VirtualBox, –∑–∞–∫—Ä–æ–π—Ç–µ Genymotion")
            return True
        else:
            stdout, stderr = process.communicate()
            print(f"‚ùå Genymotion –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è")
            print(f"–û—à–∏–±–∫–∞: {stderr}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def check_virtualbox_error():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫ VirtualBox"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º VirtualBox
    virtualbox_paths = [
        "C:/Program Files/Oracle/VirtualBox/VBoxManage.exe",
        "C:/Program Files (x86)/Oracle/VirtualBox/VBoxManage.exe"
    ]
    
    virtualbox_found = False
    for path in virtualbox_paths:
        if os.path.exists(path):
            virtualbox_found = True
            print(f"‚úÖ VirtualBox –Ω–∞–π–¥–µ–Ω: {path}")
            break
    
    if not virtualbox_found:
        print("‚ùå VirtualBox –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("üí° Genymotion —Ç—Ä–µ–±—É–µ—Ç VirtualBox")
        print("üí° –ù–æ –º–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–µ–∑ –Ω–µ–≥–æ")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—é
    try:
        result = subprocess.run([
            "wmic", "cpu", "get", "VirtualizationFirmwareEnabled"
        ], capture_output=True, text=True, encoding='utf-8')
        
        if "TRUE" in result.stdout:
            print("‚úÖ –í–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞ –≤ BIOS")
        else:
            print("‚ùå –í–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ BIOS")
            print("üí° –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º–æ–π –¥–ª—è VirtualBox")
    except:
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—é")

def main():
    print("üß™ Genymotion Tester")
    print("=" * 30)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã
    check_virtualbox_error()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Genymotion
    if test_genymotion():
        print("\nüéâ Genymotion —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print("üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:")
        print("   python fast_emulator.py")
    else:
        print("\n‚ùå Genymotion –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:")
        print("   1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å VirtualBox")
        print("   2. –í–∫–ª—é—á–∏—Ç—å –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—é –≤ BIOS")
        print("   3. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π —ç–º—É–ª—è—Ç–æ—Ä")

if __name__ == "__main__":
    main() 