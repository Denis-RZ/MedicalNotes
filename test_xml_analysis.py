#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import datetime
import time

def analyze_xml_data():
    print("=== –ê–ù–ê–õ–ò–ó XML –î–ê–ù–ù–´–• ===")
    print()
    
    # –î–∞–Ω–Ω—ã–µ –∏–∑ XML
    lipetor_data = {
        'id': 1754381301015,
        'name': '–õ–∏–ø–µ—Ç–æ—Ä',
        'startDate': 1754381301006,
        'groupStartDate': 1754451744031,
        'groupOrder': 1,
        'lastTakenTime': 1754473507174,
        'takenToday': False
    }
    
    fubuxusat_data = {
        'id': 1754381353482,
        'name': '–§—É–±—É–∫—Å—É—Å–∞—Ç',
        'startDate': 1754381353472,
        'groupStartDate': 1754451755574,
        'groupOrder': 2,
        'lastTakenTime': 1754471876018,
        'takenToday': False
    }
    
    # –°–µ–≥–æ–¥–Ω—è—à–Ω—è—è –¥–∞—Ç–∞
    today = datetime.datetime.now().date()
    print(f"–°–µ–≥–æ–¥–Ω—è—à–Ω—è—è –¥–∞—Ç–∞: {today}")
    print()
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥–æ–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–æ
    for medicine_data in [lipetor_data, fubuxusat_data]:
        print(f"=== –ê–ù–ê–õ–ò–ó: {medicine_data['name']} ===")
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º timestamp –≤ –¥–∞—Ç—É
        start_date = datetime.datetime.fromtimestamp(medicine_data['startDate'] / 1000).date()
        group_start_date = datetime.datetime.fromtimestamp(medicine_data['groupStartDate'] / 1000).date()
        last_taken_date = datetime.datetime.fromtimestamp(medicine_data['lastTakenTime'] / 1000).date()
        
        print(f"–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –ø—Ä–∏–µ–º–∞: {start_date}")
        print(f"–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –≥—Ä—É–ø–ø—ã: {group_start_date}")
        print(f"–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–∏–µ–º: {last_taken_date}")
        print(f"–ü–æ—Ä—è–¥–æ–∫ –≤ –≥—Ä—É–ø–ø–µ: {medicine_data['groupOrder']}")
        print(f"–ü—Ä–∏–Ω—è—Ç–æ —Å–µ–≥–æ–¥–Ω—è: {medicine_data['takenToday']}")
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–Ω–∏ —Å –Ω–∞—á–∞–ª–∞ –≥—Ä—É–ø–ø—ã
        days_since_group_start = (today - group_start_date).days
        group_day = days_since_group_start % 2  # 0 –∏–ª–∏ 1
        
        print(f"–î–Ω–µ–π —Å –Ω–∞—á–∞–ª–∞ –≥—Ä—É–ø–ø—ã: {days_since_group_start}")
        print(f"–î–µ–Ω—å –≥—Ä—É–ø–ø—ã (0/1): {group_day}")
        
        # –õ–æ–≥–∏–∫–∞ "—á–µ—Ä–µ–∑ –¥–µ–Ω—å"
        should_take = False
        if medicine_data['groupOrder'] == 1:
            should_take = group_day == 0  # –ü–µ—Ä–≤–æ–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–æ –≤ —á–µ—Ç–Ω—ã–µ –¥–Ω–∏
        elif medicine_data['groupOrder'] == 2:
            should_take = group_day == 1  # –í—Ç–æ—Ä–æ–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–æ –≤ –Ω–µ—á–µ—Ç–Ω—ã–µ –¥–Ω–∏
        
        print(f"–î–æ–ª–∂–Ω–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å—Å—è —Å–µ–≥–æ–¥–Ω—è: {should_take}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–æ –ª–∏ –ø—Ä–∏–Ω—è—Ç–æ –≤—á–µ—Ä–∞
        yesterday = today - datetime.timedelta(days=1)
        was_taken_yesterday = last_taken_date == yesterday
        print(f"–ü—Ä–∏–Ω—è—Ç–æ –≤—á–µ—Ä–∞: {was_taken_yesterday}")
        
        # –§–∏–Ω–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞
        final_result = should_take
        if was_taken_yesterday and not should_take:
            final_result = False  # –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º, –µ—Å–ª–∏ –ø—Ä–∏–Ω—è—Ç–æ –≤—á–µ—Ä–∞ –∏ —Å–µ–≥–æ–¥–Ω—è –Ω–µ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
        
        print(f"–§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {final_result}")
        print()

def analyze_timestamps():
    print("=== –ê–ù–ê–õ–ò–ó TIMESTAMP'–û–í ===")
    print()
    
    # Timestamp'—ã –∏–∑ XML
    timestamps = {
        'lipetor_start': 1754381301006,
        'lipetor_group_start': 1754451744031,
        'lipetor_last_taken': 1754473507174,
        'fubuxusat_start': 1754381353472,
        'fubuxusat_group_start': 1754451755574,
        'fubuxusat_last_taken': 1754471876018,
        'updated_at': 1754540857591
    }
    
    for name, ts in timestamps.items():
        dt = datetime.datetime.fromtimestamp(ts / 1000)
        print(f"{name}: {dt.strftime('%Y-%m-%d %H:%M:%S')}")

def main():
    print("üîç –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´ –° –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï–ú –õ–ï–ö–ê–†–°–¢–í")
    print("=" * 50)
    print()
    
    analyze_timestamps()
    print()
    analyze_xml_data()
    
    print("=== –í–´–í–û–î–´ ===")
    print("1. –ü—Ä–æ–±–ª–µ–º–∞ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π –ª–æ–≥–∏–∫–µ '—á–µ—Ä–µ–∑ –¥–µ–Ω—å'")
    print("2. –õ–µ–∫–∞—Ä—Å—Ç–≤–∞ –∏–º–µ—é—Ç —Ä–∞–∑–Ω—ã–µ groupStartDate")
    print("3. –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ —Ç–æ–º, —á—Ç–æ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏")
    print("   —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –∏–ª–∏ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –ª–æ–≥–∏–∫–∞ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞")
    print("4. –ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –ª–∏ startDate –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏")

if __name__ == "__main__":
    main() 