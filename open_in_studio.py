#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –≤ Android Studio
"""

import os
import sys
import subprocess
import time
from pathlib import Path

def print_info(message):
    print(f"[INFO] {message}")

def print_success(message):
    print(f"[SUCCESS] {message}")

def print_error(message):
    print(f"[ERROR] {message}")

def find_android_studio():
    """–ò—â–µ—Ç Android Studio"""
    possible_paths = [
        "C:\\Program Files\\Android\\Android Studio\\bin\\studio64.exe",
        "C:\\Program Files (x86)\\Android\\Android Studio\\bin\\studio64.exe",
        "C:\\Users\\mikedell\\AppData\\Local\\Android\\Sdk\\tools\\bin\\studio64.exe",
        "C:\\Users\\mikedell\\AppData\\Local\\Android\\Sdk\\tools\\studio64.exe"
    ]
    
    for path in possible_paths:
        if os.path.exists(path):
            return path
    
    return None

def open_in_studio():
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø—Ä–æ–µ–∫—Ç –≤ Android Studio"""
    print("üîß –û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –≤ Android Studio")
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
    project_path = Path.cwd().absolute()
    print_info(f"–ü—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É: {project_path}")
    
    # –ò—â–µ–º Android Studio
    studio_path = find_android_studio()
    if not studio_path:
        print_error("Android Studio –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print_info("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Android Studio –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –Ω–µ–º—É")
        return False
    
    print_info(f"–ù–∞–π–¥–µ–Ω Android Studio: {studio_path}")
    
    try:
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç –≤ Android Studio
        print_info("–û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –≤ Android Studio...")
        subprocess.Popen([studio_path, str(project_path)])
        
        print_success("–ü—Ä–æ–µ–∫—Ç –æ—Ç–∫—Ä—ã—Ç –≤ Android Studio!")
        print_info("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Å–±–æ—Ä–∫–µ APK:")
        print_info("1. –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞")
        print_info("2. –í—ã–±–µ—Ä–∏—Ç–µ Build -> Build Bundle(s) / APK(s) -> Build APK(s)")
        print_info("3. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Build -> Make Project")
        print_info("4. APK –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –≤ app/build/outputs/apk/debug/")
        
        return True
        
    except Exception as e:
        print_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ Android Studio: {e}")
        return False

def create_build_instructions():
    """–°–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –ø–æ —Å–±–æ—Ä–∫–µ"""
    instructions = """# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Å–±–æ—Ä–∫–µ APK

## –°–ø–æ—Å–æ–± 1: –ß–µ—Ä–µ–∑ Android Studio (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)

1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –≤ Android Studio
2. –î–æ–∂–¥–∏—Ç–µ—Å—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ Gradle
3. –í—ã–±–µ—Ä–∏—Ç–µ Build -> Build Bundle(s) / APK(s) -> Build APK(s)
4. APK –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –≤ –ø–∞–ø–∫–µ: `app/build/outputs/apk/debug/app-debug.apk`

## –°–ø–æ—Å–æ–± 2: –ß–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É

1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –≤ –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: `gradlew.bat assembleDebug`
3. APK –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –≤ –ø–∞–ø–∫–µ: `app/build/outputs/apk/debug/app-debug.apk`

## –°–ø–æ—Å–æ–± 3: –ß–µ—Ä–µ–∑ Gradle –ø–∞–Ω–µ–ª—å

1. –í Android Studio –æ—Ç–∫—Ä–æ–π—Ç–µ –ø–∞–Ω–µ–ª—å Gradle (—Å–ø—Ä–∞–≤–∞)
2. –†–∞–∑–≤–µ—Ä–Ω–∏—Ç–µ app -> Tasks -> build
3. –î–≤–∞–∂–¥—ã –∫–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ assembleDebug

## –£—Å—Ç–∞–Ω–æ–≤–∫–∞ APK –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ

1. –í–∫–ª—é—á–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –Ω–∞ Android —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
2. –í–∫–ª—é—á–∏—Ç–µ –æ—Ç–ª–∞–¥–∫—É –ø–æ USB
3. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∫ –∫–æ–º–ø—å—é—Ç–µ—Ä—É
4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ APK —Ñ–∞–π–ª –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
5. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ APK —á–µ—Ä–µ–∑ —Ñ–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä

## –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã

- –ï—Å–ª–∏ —Å–±–æ—Ä–∫–∞ –Ω–µ —É–¥–∞–µ—Ç—Å—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ File -> Invalidate Caches and Restart
- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω Android SDK
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ Java –≤–µ—Ä—Å–∏–∏ 8 –∏–ª–∏ –≤—ã—à–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

- `app/src/main/java/` - –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ Kotlin
- `app/src/main/res/` - —Ä–µ—Å—É—Ä—Å—ã (–º–∞–∫–µ—Ç—ã, —Å—Ç—Ä–æ–∫–∏, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
- `app/src/main/AndroidManifest.xml` - –º–∞–Ω–∏—Ñ–µ—Å—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
- `build.gradle` - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±–æ—Ä–∫–∏
"""
    
    with open('BUILD_INSTRUCTIONS.md', 'w', encoding='utf-8') as f:
        f.write(instructions)
    
    print_success("–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª BUILD_INSTRUCTIONS.md —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏")

def main():
    print("="*60)
    print("üöÄ –û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ MedicalNotes –≤ Android Studio")
    print("="*60)
    
    if not open_in_studio():
        print_error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ–µ–∫—Ç –≤ Android Studio")
        return False
    
    create_build_instructions()
    
    print("\n" + "="*60)
    print_success("–ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Å–±–æ—Ä–∫–µ!")
    print("="*60)
    
    return True

if __name__ == "__main__":
    try:
        success = main()
        sys.exit(0 if success else 1)
    except KeyboardInterrupt:
        print("\n\n[INFO] –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print_error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1) 